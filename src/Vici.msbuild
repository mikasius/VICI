<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <!-- Directories -->
    <PropertyGroup>
        <BasePath>$(MSBuildProjectDirectory)\..\</BasePath>
        <ToolsPath>$(BasePath)tools\</ToolsPath>
        <BuildOutputPath>$(BasePath)_build\</BuildOutputPath>
        <ReportOutputPath>$(BuildOutputPath)Reports\</ReportOutputPath>
        <SourceCodePath>$(BasePath)src\</SourceCodePath>
    </PropertyGroup>
    
    <PropertyGroup>
        <MSBuildCommunityTasksPath>$(ToolsPath)MsBuild.CommunityTasks\1.3.0.489</MSBuildCommunityTasksPath>
    </PropertyGroup>
    
    <Import Project="$(MSBuildCommunityTasksPath)\MSBuild.Community.Tasks.Targets" />

    <!-- Executable Related -->
    <PropertyGroup>
        <ZipExe>$(ToolsPath)7zip\7za.exe</ZipExe>
        <GitExe>$(ToolsPath)Git\git.exe</GitExe>
        <FxCopExe>$(ToolsPath)FxCop\FxCopCmd.exe</FxCopExe>
        
        <FxCopReport>$(ReportOutputPath)FxCop_Analysis.html</FxCopReport>
        <CodeAnalysisDictionary>$(SourceCodePath)CodeAnalysisDictionary.xml</CodeAnalysisDictionary>
    </PropertyGroup>
    
    <PropertyGroup>
        <Configuration>Release</Configuration>
    </PropertyGroup>
    
    <ItemGroup>
        <SourceFiles Include="$(SourceCodePath)**\*.cs" Exclude="$(SourceCodePath)**\*.Designer.cs" />
    </ItemGroup>
    
    <Target Name="Clean">
        <ItemGroup>
            <BuildArtifactsToDelete Include="$(BuildOutputPath)**\*;$(BuildOutputPath)*.*" />
        </ItemGroup>
        <Delete Files="@(BuildArtifactsToDelete)" Condition=" Exists('$(BuildOutputPath)') " />
        <RemoveDir Directories="$(BuildOutputPath)" ContinueOnError="true"/>
    </Target>
    
    <Target Name="Init" DependsOnTargets="Clean">
        <MakeDir Directories="$(BuildOutputPath)" />
        <MakeDir Directories="$(ReportOutputPath)" />
    </Target>
    
    <Target Name="UpdateVersion">
        <Exec Command="$(GitExe) describe --long > $(BuildOutputPath)_version" Condition=" Exists('$(BasePath).git\') "/>
        <ReadLinesFromFile File="$(BuildOutputPath)_version" Condition=" Exists('$(BuildOutputPath)_version') ">
            <Output TaskParameter="Lines" ItemName="VersionLines" />
        </ReadLinesFromFile>
        <Delete Files="$(BuildOutputPath)_version" Condition=" Exists('$(BuildOutputPath)_version') " />
        <RegexReplace Input="@(VersionLines)" Expression="-.{8}$" Replacement="" Condition=" '@(VersionLines)' != '' ">
            <Output TaskParameter="Output" ItemName="VersionTag" />
        </RegexReplace>
        <RegexReplace Input="@(VersionTag)" Expression="v" Replacement="" Condition=" '@(VersionTag)' != ''">
            <Output TaskParameter="Output" ItemName="VersionTag1" />
        </RegexReplace>
        <RegexReplace Input="@(VersionTag1)" Expression="-" Replacement="." Condition=" '@(VersionTag1)' != '' ">
            <Output TaskParameter="Output" ItemName="VersionTag2" />
        </RegexReplace>
        <RegexReplace Input="@(VersionTag1)" Expression="-\d+$" Replacement=".0" Condition=" '@(VersionTag1)' != '' ">
            <Output TaskParameter="Output" ItemName="AssemblyVersion" />
        </RegexReplace>
        <CreateProperty Value="@(VersionTag2)" Condition=" '@(VersionTag2)' != '' ">
            <Output TaskParameter="Value" PropertyName="Version" />
        </CreateProperty>
        <CreateProperty Value="@(AssemblyVersion)" Condition=" '@(AssemblyVersion)' != '' ">
            <Output TaskParameter="Value" PropertyName="AssemblyVersion" />
        </CreateProperty>
        <Message Text="Unable to find Git tag information.  Using default value" Importance="high" Condition=" '@(VersionTag2)' == '' OR '@(AssemblyVersion)' == '' " />
        <CreateProperty Value="999.999.999.999" Condition=" '@(VersionTag2)' == '' ">
            <Output TaskParameter="Value" PropertyName="Version" />
        </CreateProperty>
        <CreateProperty Value="999.999.999.999" Condition=" '@(AssemblyVersion)' == '' ">
            <Output TaskParameter="Value" PropertyName="AssemblyVersion" />
        </CreateProperty>
    </Target>
    
    <Target Name="UpdateVersionFile" DependsOnTargets="UpdateVersion">
        <Copy SourceFiles="$(SourceCodePath)VersionInfo.Example.cs" DestinationFiles="$(SourceCodePath)VersionInfo.cs" Condition="!Exists('$(SourceCodePath)VersionInfo.cs')" />
        <!-- Update VersionInfo.cs for assembly versions -->
        <ReadLinesFromFile File="$(SourceCodePath)VersionInfo.cs">
            <Output TaskParameter="Lines" ItemName="_versionInfoLines" />
        </ReadLinesFromFile>
        <RegexReplace Input="@(_versionInfoLines)" Expression="\d+\.\d+\.\d+\.\d+" Replacement="$(Version)">
            <Output TaskParameter="Output" ItemName="_newVersionInfoLines" />
        </RegexReplace>
        <RegexReplace Input="@(_newVersionInfoLines)" Expression="AssemblyVersion\(&quot;\d+\.\d+\.\d+\.\d+" Replacement="AssemblyVersion(&quot;$(AssemblyVersion)">
            <Output TaskParameter="Output" ItemName="_newVersionInfoLines1" />
        </RegexReplace>
        <WriteLinesToFile File="$(SourceCodePath)VersionInfo.cs" Lines="@(_newVersionInfoLines1)" Overwrite="true" />
    </Target>
    
    <Target Name="Build" DependsOnTargets="Init;UpdateVersion">
        <ItemGroup>
            <ClientProject Include="$(SourceCodePath)**\Vici.Client.csproj" />
        </ItemGroup>
        <MSBuild Projects="@(ClientProject)" Properties="Configuration=$(Configuration)" />
    </Target>
    
    <Target Name="Build_Tests" DependsOnTargets="Build">
    </Target>
    
    <Target Name="Build_Installer" DependsOnTargets="Build;UpdateVersionFile">
        <!-- Copy the installer project to the build folder so updates don't affect source control -->
        <ItemGroup>
            <InstallerFiles Include="$(SourceCodePath)Vici.Installer\**\*.*" Exclude="$(SourceCodePath)Vici.Installer\bin\**\*.*;$(SourceCodePath)Vici.Installer\obj\**\*.*" />
        </ItemGroup>
        <Copy SourceFiles="@(InstallerFiles)" DestinationFolder="$(BuildOutputPath)Installer\%(RecursiveDir)" />
        
        
        <ItemGroup>
            <InstallerProject Include="$(BuildOutputPath)**\*.wixproj" />
            <InstallerProperties Include="$(BuildOutputPath)**\BuildProperties.wxi" />
        </ItemGroup>
        
        <!-- Update the version information -->
        <ReadLinesFromFile File="@(InstallerProperties)">
            <Output TaskParameter="Lines" ItemName="_installerPropertiesLines" />
        </ReadLinesFromFile>
        <RegexReplace Input="@(_installerPropertiesLines)" Expression="&quot;\d+\.\d+\.\d+\.\d+&quot;" Replacement="&quot;$(Version)&quot;">
            <Output TaskParameter="Output" ItemName="_newInstallerProperties" />
        </RegexReplace>
        <WriteLinesToFile File="@(InstallerProperties)" Lines="@(_newInstallerProperties)" Overwrite="true" />
        
        <!-- Build the installer & move it to the root of the build folder -->
        <MSBuild Projects="@(InstallerProject)" Properties="Configuration=$(Configuration);DefineSolutionProperties=false" />
        <Delete Files="$(BuildOutputPath)$(Configuration)\Vici.Installer.wixpdb" />
        <Copy SourceFiles="$(BuildOutputPath)$(Configuration)\Vici.Installer.msi" DestinationFiles="$(BuildOutputPath)$(MSBuildProjectName)_$(Version)_Install.msi" />
        <Delete Files="$(BuildOutputPath)$(Configuration)\Vici.Installer.msi" />
        
        <!-- Clear out the copied Installer project files -->
        <ItemGroup>
            <_CopiedInstallerFiles Include="$(BuildOutputPath)Installer\**\*;$(BuildOutputPath)Installer\*" />
        </ItemGroup>
        <Delete Files="@(_CopiedInstallerFiles)" />
        <RemoveDir Directories="$(BuildOutputPath)Installer\" ContinueOnError="true" />
    </Target>
    
    <Target Name="Build_All" DependsOnTargets="Build;Build_Tests;Build_Installer">
    </Target>
    
    <Target Name="ArchiveSource" DependsOnTargets="UpdateVersion">
        <Exec Command="$(GitExe) archive --format=zip -9 --output=$(BuildOutputPath)$(MSBuildProjectName)_$(Version)_src.zip master" WorkingDirectory="$(BasePath)" />
    </Target>
    
    <Import Project="$(ToolsPath)StyleCop\v4.4.0.12\Microsoft.StyleCop.Targets" />
    <Target Name="AnalyzeAssemblies">
        <ItemGroup>
            <AssembliesToAnalyze Include="$(BuildOutputPath)$(Configuration)\**\Vici*.dll" />
        </ItemGroup>
        <Exec Command="$(FxCopExe) @(AssembliesToAnalyze->'/file:%(FullPath)',' ') /out:$(FxCopReport) /dictionary:$(CodeAnalysisDictionary) /axsl /s /fo /searchgac /quiet" Condition=" '@(AssembliesToAnalyze)' != '' "/>
        <Message Text="After FxCop" />
        <StyleCopTask
            SourceFiles="@(SourceFiles)"
            ForceFullAnalysis="true"
            OutputFile="$(ReportOutputPath)Stylecop.xml"
            CacheResults="false"
            ProjectFullPath="$(SourceCodePath)"
            OverrideSettingsFile="$(SourceCodePath)Settings.StyleCop"
            TreatErrorsAsWarnings="true" />
        <Message Text="After StyleCop" />
    </Target>
    
    <Target Name="Everything" DependsOnTargets="ArchiveSource;AnalyzeAssemblies;Build_All;Build_Installer;Build_Tests;Build;" />
</Project>